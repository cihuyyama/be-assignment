basePath: /api/v1
definitions:
  dto.CreateAccountRequest:
    properties:
      account_number:
        type: string
      balance:
        type: integer
      type:
        type: string
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 5
        type: string
    required:
    - email
    - password
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 5
        type: string
    required:
    - email
    - password
    type: object
  dto.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a simple API for Banking Core System.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ConcreteAI-Assignment API
  version: "1.0"
paths:
  /accounts:
    get:
      consumes:
      - application/json
      description: Get all user's account using token from the authorization header
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
      security:
      - BearerAuth: []
      summary: Get all user's account
      tags:
      - Account Manager
    post:
      consumes:
      - application/json
      description: Create a new account
      parameters:
      - description: Create Account Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
      security:
      - BearerAuth: []
      summary: Create a new account
      tags:
      - Account Manager
  /login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Login Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
      summary: Login a user
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
      summary: Register a new user
      tags:
      - Auth
  /users:
    get:
      consumes:
      - application/json
      description: Get user data using token from the authorization header
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
      security:
      - BearerAuth: []
      summary: Get user data
      tags:
      - Account Manager
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
